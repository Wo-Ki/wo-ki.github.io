<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wo-ki.github.io</id>
    <title>Wo-Ki</title>
    <updated>2021-01-18T02:24:12.137Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wo-ki.github.io"/>
    <link rel="self" href="https://wo-ki.github.io/atom.xml"/>
    <subtitle>📝</subtitle>
    <logo>https://wo-ki.github.io/images/avatar.png</logo>
    <icon>https://wo-ki.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Wo-Ki</rights>
    <entry>
        <title type="html"><![CDATA[阿里云ECS上搭建openVPN]]></title>
        <id>https://wo-ki.github.io/post/a-li-yun-ecs-shang-da-jian-openvpn/</id>
        <link href="https://wo-ki.github.io/post/a-li-yun-ecs-shang-da-jian-openvpn/">
        </link>
        <updated>2021-01-15T08:40:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-简介">一、简介</h1>
<ul>
<li>外网无法访问内网主机，所以需要打通</li>
<li>openVPN可以借助有公网的设备（本文是阿里云ECS），将内网机器暴露在公网机器中，所以可以在外网访问</li>
</ul>
<h1 id="二-环境">二、环境</h1>
<ul>
<li>（服务端）阿里云ECS（九块九）：ubuntu 18.04</li>
<li>（客户端）ubuntu主机和MacBook pro</li>
</ul>
<h1 id="三-服务端安装">三、服务端安装</h1>
<h2 id="1安装openvpn">1.安装OpenVPN</h2>
<p>OpenVPN在Ubuntu的默认仓库中是可用的，所以我们可用使用apt来安装。我们还需安装一个easy-rsa包，这个包可以帮助我们建立一个内部CA（certificate authority）用于使用我们VPN。<br>
更新你的服务器包索引并安装必要的包类型：</p>
<pre><code class="language-bash">$ sudo apt-get update
$ sudo apt-get install openvpn easy-rsa
</code></pre>
<h2 id="2设置ca目录">2.设置CA目录</h2>
<p>OpenVPN 是使用 TLS/SSL 的 VPN。这意味着它利用证书来加密服务器和客户端之间的通信。为了发布受信任的证书，我们需要建立一个自己的简单的证书颁发机构(CA)。 使用 <strong>make-cadir</strong> 命令复制 easy-rsa 模板到 home 目录</p>
<pre><code class="language-bash">$ make-cadir ~/openvpn/openvpn-ca
</code></pre>
<p>接着进入刚刚新建的目录准备配置 CA:</p>
<pre><code class="language-bash">$ cd ~/openvpn/openvpn-ca
$ ln -s openssl-1.0.0.cnf openssl.cnf
</code></pre>
<h2 id="3配置ca变量">3.配置CA变量</h2>
<p>进入** ~/openvpn/openvpn-ca** 目录后，我们需要修改 vars 文件，以便于生成需要的 CA 值。<br>
在文件底部找到以下配置：</p>
<pre><code class="language-bash">export KEY_COUNTRY=&quot;US&quot;
export KEY_PROVINCE=&quot;CA&quot;
export KEY_CITY=&quot;SanFrancisco&quot;
export KEY_ORG=&quot;Fort-Funston&quot;
export KEY_EMAIL=&quot;me@myhost.mydomain&quot;
export KEY_OU=&quot;MyOrganizationalUnit&quot;
...
</code></pre>
<p>将这些变量修改为任意你喜欢的值，但是不要为空：</p>
<pre><code class="language-bash">...
export KEY_COUNTRY=&quot;CN&quot;
export KEY_PROVINCE=&quot;ZJ&quot;
export KEY_CITY=&quot;HZ&quot;
export KEY_ORG=&quot;www.woki.com&quot;
export KEY_EMAIL=&quot;wangqiang1588@sina.com&quot;
export KEY_OU=&quot;com.woki&quot;
...
</code></pre>
<p>然后，我们还要修改紧接着出现的 KEY_NAME 的值，为了简单起见，我们改为 <strong>server</strong>：</p>
<pre><code class="language-bash">export KEY_NAME=&quot;server&quot;
</code></pre>
<h2 id="4构建ca证书">4.构建CA证书</h2>
<p>首先进入你的 CA 目录，然后执行 source vars :</p>
<pre><code class="language-bash">$ cd ~/openvpn/openvpn-ca
$ source vars
</code></pre>
<p>接着会有以下输出：</p>
<pre><code class="language-bash">NOTE: If you run ./clean-all, I will be doing a rm -rf on /home/ubuntu/openvpn/openvpn-ca/keys
</code></pre>
<p>执行下列操作确保操作环境干净：</p>
<pre><code class="language-bash">$ ./clean-all
</code></pre>
<p>现在我们可以构建根 CA：</p>
<pre><code class="language-bash"># 如果执行时候报错
# grep: /etc/openvpn/easy-rsa/2.0/openssl.cnf: No such file or directory
# pkitool: KEY_CONFIG (set by the ./vars script) is pointing to the wrong
# version of openssl.cnf: /etc/openvpn/easy-rsa/2.0/openssl.cnf
# The correct version should have a comment that says: easy-rsa version 2.x
# 则可以执行如下命令修复
# ln -s openssl-1.0.0.cnf openssl.cnf
 
$ ./build-ca
</code></pre>
<p>这将会启动创建根证书颁发密钥、证书的过程。由于我们刚才修改了 vars 文件，所有值应该都会自动填充。所以，一路回车就好了：</p>
<pre><code class="language-bash">Generating a 2048 bit RSA private key
..........................................................................................+++
...............................+++
writing new private key to 'ca.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:
State or Province Name (full name) [ZJ]:
Locality Name (eg, city) [HZ]:
Organization Name (eg, company) [www.woki.com]:
Organizational Unit Name (eg, section) [com.woki]:
Common Name (eg, your name or your server's hostname) [www.woki.com CA]:
Name [woki]:
Email Address [wangqiang1588@sina.com]:
</code></pre>
<p>现在，我们就有了创建以下步骤需要的 CA 证书。</p>
<h2 id="5创建服务器端证书-密钥和加密文件">5.创建服务器端证书、密钥和加密文件</h2>
<p>通过下列命令生成服务器端证书和秘钥：</p>
<pre><code class="language-bash">$ ./build-key-server server
</code></pre>
<p>注：server 就是刚才在 vars 文件中修改的 KEY_NAME 变量的值。请不要使用别的名字！ 然后一直回车选择默认值即可，不要设置 challenge password ，直接回车即可。到最后，你需要输入两次 y 注册证书和提交。</p>
<pre><code class="language-bash">...
Certificate is to be certified until May  1 17:51:16 2026 GMT (3650 days)
Sign the certificate? [y/n]:y
1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated
</code></pre>
<p>然后还需要生成一些其他东西。我们可以在密钥交换过程中生成一个强大的 Diffie-Hellman 密钥:</p>
<pre><code class="language-bash">$./build-dh
</code></pre>
<p>这个操作大约会花费几分钟不等。 然后，我们可以生成 HMAC 签名加强服务器的 TLS 完整性验证功能：</p>
<pre><code class="language-bash">$ openvpn --genkey --secret keys/ta.key
</code></pre>
<h2 id="6配置-openvpn-服务">6.配置 OPENVPN 服务</h2>
<p>首先将刚刚生成的各类文件复制到 OpenVPN 目录下：</p>
<pre><code class="language-bash">$ cd ~/openvpn/openvpn-ca/keys
$ sudo cp ca.crt ca.key server.crt server.key ta.key dh2048.pem /etc/openvpn
</code></pre>
<p>然后，解压并复制一个 OpenVPN 配置文件到 OpenVPN 目录：</p>
<pre><code class="language-bash">$ gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz | sudo tee /etc/openvpn/server.conf
$ sudo mkdir -p /etc/openvpn/ccd
</code></pre>
<p>接着更改配置,去掉注释之后，精简的关键信息如下** /etc/openvpn/server.conf**：</p>
<pre><code class="language-bash">port 1194
proto tcp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh2048.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
client-config-dir ccd
client-to-client
keepalive 10 120
tls-auth ta.key 0
key-direction 0
cipher AES-256-CBC
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
verb 3
</code></pre>
<h2 id="6调整服务器网络配置">6.调整服务器网络配置</h2>
<p>首先，确认UFW防火墙状态，如果状态为开启，则调整。如果防火墙是关闭的，则不需要调整。</p>
<pre><code class="language-bash">sudo ufw status
</code></pre>
<p>如果输出是<strong>Status: inactive</strong>, 那么不需要进行下面的调整。<br>
注意，下面的调整如果中间出现问题，可能导致防火墙拦截SSH进而无法进行恢复操作。如果出现问题，可以使用阿里云或者腾讯云提供的远程控制台在网页端进行恢复操作。</p>
<h2 id="7启动openvpn">7.启动OPENVPN</h2>
<pre><code class="language-bash">$ sudo mkdir -p /etc/openvpn/ccd
$ sudo systemctl start openvpn@server
#如果启动失败，则执行如下命令观察日志
# sudo tail -f /var/log/syslog
</code></pre>
<p>设置开机自启：</p>
<pre><code class="language-bash">$ sudo systemctl enable openvpn@server
</code></pre>
<h1 id="四-阿里云开启端口">四、阿里云开启端口</h1>
<p>在阿里云管理界面中，配置ECS安全组的1194端口为开放</p>
<h1 id="五-客户端安装配置">五、客户端安装配置</h1>
<h2 id="1创建客户端配置">1.创建客户端配置</h2>
<p>在<strong>服务端</strong>，生成客户端证书、密钥对：</p>
<pre><code class="language-bash">$ cd ~/openvpn/openvpn-ca
$ source vars
$ cp /etc/openvpn/ca.crt ./keys/
$ sudo cp /etc/openvpn/ca.key ./keys/
$ sudo cp /etc/openvpn/ta.key ./keys/
$ sudo chmod 755 ./keys/ca.crt
$ sudo chmod 755 ./keys/ta.key
$ ./build-key client-woki
</code></pre>
<p><strong>client-woki</strong>为密钥对名称，生成过程中回车选择默认选项即可。<br>
注意，下面这一步一定要输入 y 否则会跳过最后一步，导致生成证书的时候会缺少部分信息。</p>
<pre><code class="language-bash">Certificate is to be certified until May 29 11:40:12 2029 GMT (3650 days)
Sign the certificate? [y/n]:y
1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated
</code></pre>
<p><strong>注意，如果有多个客户端的话，建议为每个客户端生成一份配置文件。</strong><br>
执行下列命令，生成客户端配置的基础文件：</p>
<pre><code class="language-bash">$ mkdir -p ~/client-configs/files
$ chmod 700 ~/client-configs/files
$ cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/client-configs/base.conf  
</code></pre>
<p>然后打开 <strong>~/client-configs/base.conf</strong> 文件，修改 <strong>remote my-server-1 1194 <strong>为服务器公网IP或者域名。 然后更改客户端协议为</strong>tcp</strong>,去掉注释后的完整配置为：</p>
<pre><code class="language-bash">client
dev tun
proto tcp
remote my-server-1 1194
resolv-retry infinite
nobind
user nobody
group nogroup
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
key-direction 1
comp-lzo
verb 3
</code></pre>
<h2 id="2创建配置生成脚本">2.创建配置生成脚本</h2>
<p>新建** ~/client-configs/make_config.sh** 文件，复制如下内容：</p>
<pre><code class="language-bash">#!/bin/bash
# First argument: Client identifier
 
cd ~/openvpn/openvpn-ca
source vars
./build-key ${1}
 
KEY_DIR=~/openvpn/openvpn-ca/keys
OUTPUT_DIR=~/client-configs/files
BASE_CONFIG=~/client-configs/base.conf
cat ${BASE_CONFIG} \
    &lt;(echo -e '&lt;ca&gt;') \
    ${KEY_DIR}/ca.crt \
    &lt;(echo -e '&lt;/ca&gt;\n&lt;cert&gt;') \
    ${KEY_DIR}/${1}.crt \
    &lt;(echo -e '&lt;/cert&gt;\n&lt;key&gt;') \
    ${KEY_DIR}/${1}.key \
    &lt;(echo -e '&lt;/key&gt;\n&lt;tls-auth&gt;') \
    ${KEY_DIR}/ta.key \
    &lt;(echo -e '&lt;/tls-auth&gt;') \
    &gt; ${OUTPUT_DIR}/${1}.ovpn
</code></pre>
<p>保存并赋予执行权限：</p>
<pre><code class="language-bash">$ chmod 700 ~/client-configs/make_config.sh
</code></pre>
<h2 id="3生成客户端配置">3.生成客户端配置</h2>
<pre><code class="language-bash">$ cd ~/client-configs
$ ./make_config.sh client-woki
</code></pre>
<p>使用此脚本生成一个配置文件方便客户端使用。 注：需要生成客户端密钥后才可使用脚本生成配置文件，client-woki.ovpn 为刚刚生成的客户端密钥名称 生成后的脚本储存在 ~/client-configs/files 目录下，名称为 client-woki.ovpn。将文件下载到本地即可使用了。</p>
<h2 id="4为客户端设置固定ip">4.为客户端设置固定IP</h2>
<p>pass</p>
<h2 id="5客户端命令行使用">5.客户端命令行使用</h2>
<p>首先安装OpenVPN, 运行时选择配置为客户端配置文件：</p>
<pre><code class="language-bash">$ sudo apt install openvpn
$ sudo openvpn --config client-woki.ovpn
</code></pre>
<p>使用此方法可以让家里的电脑或者树莓派等设备实现内网穿透，从而远程连接进行操作。<br>
对于客户端是macOS的设备来说，推荐使用<a href="https://en.softonic.com/download/tunnelblick/mac/post-download">Tunnelblick</a></p>
<h2 id="6客户端开机自启">6.<a href="https://ubuntuqa.com/article/10000.html">客户端开机自启</a></h2>
<p>在Ubuntu上，您放置在名为/etc/openvpn/$NAME.conf的文件中的任何VPN配置都将自动启动。<br>
因此，您要做的就是将client.ovpn复制到/etc/openvpn/client.conf。我建议您还将client.conf中的绝对路径用于所有键，脚本等。<br>
当然，您可能需要仔细检查/etc/default/openvpn文件。默认情况下，它将自动启动所有VPN，但AUTOSTART值可能已更改为none，或者是要自动启动的特定配置的列表。</p>
<h1 id="六-tips">六、tips</h1>
<h2 id="1-删除errorthere-is-already-a-certificate-for">1. 删除ERROR:There is already a certificate for...</h2>
<p>vi /openvpn/openvpn-ca/keys/index.txt</p>
<h1 id="七-todo">七、TODO</h1>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/57477087">采用Frp</a></li>
</ul>
<h1 id="refer">refer:</h1>
<ul>
<li>http://www.mobibrw.com/2019/18982?replytocom=3518</li>
<li>https://www.jzfu.cc/2018/09/04/Ubuntu16-04%E6%90%AD%E5%BB%BAOpenVPN/</li>
<li>https://www.viayc.com/2019/03/21/OpenVPN%E8%AE%BF%E9%97%AE%E5%85%AC%E5%8F%B8%E5%86%85%E7%BD%91/</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[回忆录]]></title>
        <id>https://wo-ki.github.io/post/hui-yi-lu/</id>
        <link href="https://wo-ki.github.io/post/hui-yi-lu/">
        </link>
        <updated>2021-01-10T09:15:33.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>
<p>老家过小年有个习俗，当天财神爷会到每个人家里点人数，人越多来年分的钱财💰越多，所以外公每到过小年就要把外甥、外甥女叫来，比过大年还团圆👪</p>
</li>
<li>
<p>小学时，没有带水杯的习惯，很多都没有，基本上都是喝水井里现<strong>压</strong>上来的，现在想想的确不健康。偶尔，老师下课时，会问谁想喝茶缸里剩下的茶水🍵，不是很多人会上讲台喝，我竟然忘记曾经是否有喝过，但记忆中有茶缸里很多茶锈的样子，可能是臆想的</p>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[避免忘记]]></title>
        <id>https://wo-ki.github.io/post/bi-mian-wang-ji/</id>
        <link href="https://wo-ki.github.io/post/bi-mian-wang-ji/">
        </link>
        <updated>2020-12-13T11:27:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="2021010️16-️">2021010️16 ☀️</h1>
<ul>
<li>上午解决了openVPN的重复生成Key导致的错误</li>
<li>下午计划去<strong>拥翠亭</strong>，非常不幸。到入口好多人来骑车，几乎都是去头陀岭的，不过早就封山了。从旁边的小道走，下楼地摔了一跤，耳机🎧掉了立马捡起来了，走一回发现手机没了，会有有人帮我捡起来了。又骑了一会，发现水不见了，回头找，被两个警察👮‍♀️撞上了，先是温馨的提示：山路滑，我回复：所以挑一个天气好的☀️。然后，他说：再看到你罚款50💰，立马回复：谢谢谢谢🙏</li>
<li>随后捡到水，便去<strong>聚宝山</strong>，结果被保安大爷拒在门外</li>
<li>回头走在<strong>环陵路</strong>的塑胶跑道上，发现一个小路的门开了，索性进去看看，结果好几条<strong>狗</strong>🐶跑出来叫</li>
<li>太惨了</li>
</ul>
<h1 id="2021010️15-️">2021010️15 ☀️</h1>
<ul>
<li>上午本想练车的，结果打会游戏🎮就中午了</li>
<li>下午去了<strong>汤山一号温泉</strong>♨️，第一次体验室外温泉，还有一个室内恒温游泳池。室外温泉很多，在水下很舒服，不像在浴室🛀，外面的空气很不错。不过，换上岸换温泉还是很难受的，很冷。晚上🌃的自助餐还比较一般</li>
</ul>
<h1 id="2021010️14-️">2021010️14 ☀️</h1>
<ul>
<li>搞了一下午的openVPN，好几次想放弃，想使用Frp，还是坚持下来了</li>
</ul>
<h1 id="2021010️13-️">2021010️13 ☀️</h1>
<ul>
<li>xilinx的软件真的大，特别是vitis，要是一系列的，看来要重装系统了、重新分区了</li>
<li>大概是年底了，看教学视频已经无法专注了。在疫情开始严重的时候，到底要不要放春节假期，还真的是悬。如果不放，总感觉缺少一种喘息的机会，这大概是年度生物钟吧</li>
</ul>
<h1 id="2021010️12-️">2021010️12 ☀️</h1>
<ul>
<li>买了三块鸡肉，10块钱。吃第一块时，心想若是能天天买就好，第三块时，竟然感觉时生肉，吃了一口就扔了</li>
</ul>
<h1 id="2021010️11-️️">2021010️11 ☀️☁️</h1>
<ul>
<li>学校🏫那边要求18号放假，我们就不一样了。不知欢喜不知忧，先把电烤箱买了，万一出不去，还能弄个烧烤吃</li>
</ul>
<h1 id="2021010️10-️️">2021010️10 ☀️☁️</h1>
<ul>
<li>去游泳🏊‍♀️的，换好了gopro防水壳，衣服都脱了，结果一个大爷说水池没水。然后跑跑步，体验了椭圆机，打会乒乓球🏓️就回去了</li>
<li>去拿快递发现还没到，GoPro电池🔋忘记在包里了，拖把没买。哎，记性越来越不行了</li>
<li>幽门杆菌的要💊快吃完了，发现有一种药还有好多，原来是吃的不够数</li>
<li>以前认为，<strong>总是回忆说明当下比较闲</strong>，但是有些事想起来也不容易，打算增加一个回忆录板块，想起来就记下来呗</li>
<li></li>
</ul>
<h1 id="20210109️">20210109☀️</h1>
<ul>
<li>上午缝补了书包带，去giant专卖店弄一个一下车子，还练习了一会双轮跳</li>
<li>下午当然是按计划骑行。先是紫金山林道（第一次），然后是前湖，竟然要钱就没起。最后是<strong>琵琶湖</strong>，本以为就是一个普通的湖，结果因为城墙，有块阴凉处，有结冰，好多人在上面，就顺便了。结果有个人掉水里了，还好不深，这不算zuo吧。然后看到一个老大爷，在凿湖边的冰🧊，才知道，就是防止有人上冰面的。然后去了<strong>神策门</strong>，不让骑车就没去了。再然后去了<strong>许府巷</strong>，虽然已经记得不是太清了，童年的感觉立马有点了</li>
<li>惨的是，apple watch关机了，耗电太快，去了<strong>金茂汇店</strong>，不能换电池🔋，只能换表盘⌚️……就……</li>
<li>晚上🌃剪视频，测试代码喽</li>
</ul>
<h1 id="20210108-️">20210108 ☀️</h1>
<ul>
<li>申通快递，上热搜了，应届生拒绝996，遭到拒绝。996的申通，我买的迪卡侬，从昆山发货，还往上海送，更可恨的是，昆山到上海一晚上+一上午还没到</li>
<li>上午一上午的KZ会议，下午还要去拿发票🧾，超冷，明天还要去修车，惨</li>
</ul>
<h1 id="20210107-️">20210107 ☀️</h1>
<ul>
<li>听到<strong>故事FM</strong>一期非常感动人的一期，关于中巴。中巴友谊真的来之不易</li>
<li>天气真冷，出个门耳朵👂都冻僵了，穿了两条秋裤还抵不住</li>
</ul>
<h1 id="20210106-️">20210106 ☁️</h1>
<ul>
<li>比特币🪙这玩意，看看就好了</li>
<li>心情不好的原因呢，有人甩锅，已经不是讲不讲理问题，脑子进死了</li>
<li>本来是休息♨️日，结果被迫去打乒乓球🏓️，结果好拍不见了，球都是破的，回去练双轮跳。估计是鞋子🥿不行，总是离车，逛逛迪卡侬</li>
</ul>
<h1 id="20210105-️">20210105 ☁️</h1>
<ul>
<li>好久不锻炼（应该是一周），突然练腿🦵，晚上就失眠了</li>
<li>如何让人欣然接受安排呢，真的情商比智商管用啊</li>
</ul>
<h1 id="20210104">20210104 🌞</h1>
<ul>
<li>标数据真难受，流水线生产力</li>
<li>网络又换了，太烦了，又要配置静态DHCP。。。</li>
<li>晚上吃了免费麦当劳鸡腿🍗，竟然喝了雪碧</li>
</ul>
<h1 id="20210103">20210103 🌞</h1>
<ul>
<li>竟然睡到了10点，，，下午回南京</li>
</ul>
<h1 id="20210102">20210102 🌞</h1>
<ul>
<li>今天去了南禅寺，没有去烧香，基本上吃喝过了一下午</li>
</ul>
<h1 id="20210101">20210101 🌞</h1>
<ul>
<li>今天放假，前往无锡，带了好多药💊</li>
<li>下午去了新开的商场——八佰伴，还真的大，人超多，喝杯奶茶🥤就要等很久，没买了，在外面买了coco，还有正新的面筋</li>
</ul>
<h1 id="20201231">20201231 🌞</h1>
<ul>
<li>跨年了，聚餐吃饭</li>
<li>凌晨🕛好多群在发红包，吃饭的钱💰省下来了</li>
</ul>
<h1 id="20201230">20201230 🌞</h1>
<ul>
<li>参加了第三届江苏人工智能大会，800块的学生票，不仅包饭还有免费卫衣</li>
<li>最重要的是见识到很多（虽然很困），晚上还成为演员上台领奖</li>
</ul>
<h1 id="20201229-️">20201229 ❄️</h1>
<ul>
<li>为消灭幽门螺旋杆菌，一大早去了鼓楼医院，除了医保卡支出，个人账户是啥？反正没出一分现金</li>
<li>下午下雪，有点期待呀</li>
</ul>
<h1 id="20201228">20201228 🌞</h1>
<ul>
<li>海康真的是大头，硬件好，软件也好，还比某某某些产品便宜，认准就对了</li>
<li>如何评价工作饱和度呢？真的爱加班就好吗？</li>
</ul>
<h1 id="20201227">20201227 🌞</h1>
<ul>
<li>昨晚太累了，今早才剪视频。GoPro App太傻了，换个背景music还要等待⌛️一会</li>
<li>Pynq官网的例子还不错，但GitHub上的。。。好多都不支持pynq-z2，还很老</li>
<li>温故了一遍<strong>铁雨2</strong>，不带有政治态度看战术片，还不错滴</li>
<li>别问为啥今天没游泳🏊，昨天爬山🧗‍♂️还真练到小腿了，这酸爽。。。</li>
</ul>
<h1 id="20201226">20201226 🌞</h1>
<ul>
<li>一大早练车真没感觉啊，回去了</li>
<li>下午爬紫金山，晚上🌃去吃了泰国🇹🇭菜，还不错</li>
</ul>
<h1 id="20201225">20201225 🌞</h1>
<ul>
<li>圣诞节🎄的日落🌄不错，可是用GoPro没拍成time warp，删了。。。</li>
</ul>
<h1 id="20201224">20201224 🌞</h1>
<ul>
<li>爽肤水真的是个好东西，试用品真是个破费玩意</li>
<li>GoPro录制⏺️自己午睡，还真的多动症</li>
</ul>
<h1 id="20201223">20201223 🌞</h1>
<ul>
<li>平安夜🤶，发了苹果🍎，哈哈哈</li>
<li>mimi空气加湿器抵不住了，皮肤不仅痒还疼，买了<strong>肤毒膏</strong>试试</li>
</ul>
<h1 id="20201222">20201222 🌞</h1>
<ul>
<li>体检的感觉还不错，抽血💉最多的一次，4个管子，还第一次验尿。。。当然，还有免费的早餐🥣，nice</li>
</ul>
<h1 id="20201221">20201221 🌞</h1>
<ul>
<li>vivado_HLS的cpp文件必须要hpp？？？test Bench要import hpp啊啊啊</li>
<li>冬至当然吃饺子🥟啦</li>
</ul>
<h1 id="20201220">20201220 🌞</h1>
<ul>
<li>vivado这玩意真难搞，2020.2版本更新问题一大堆，生成ip都不用vivado_hls，改成vitis_hls，我的pynq-z2没有完全生成成功，惨</li>
<li>下午照常🏊、撸铁了会，神清气爽</li>
<li>闲鱼想淘个go pro都这么难，屠龙刀一下，要么不回复，要么开骂🤬，什么玩意。所以还价还真的不能一开始就这么敏感，可以先问点别的问题，比如啥时候买的呀。。。</li>
</ul>
<h1 id="20201219">20201219 🌞</h1>
<ul>
<li>上午还是没写成年度总结，deadline真的是第一生产力啊</li>
<li>下午，去了江宁佘村。这哪是乡村，这是别墅🏠群啊，前来玩的人很多，虽然是冬天了，路上风景还是很不错滴。水库很多，钓鱼🎣者的天堂，水面倒映着闪烁的阳光，还真有点刺眼。吃的喝的，还有民宅，美滋滋</li>
<li>当然，最让人（cj车手）心动💓的还真只有是<strong>江宁山地车基地</strong>了。平时在公路上骑山地车，未免有点怀才不遇，但真的骑上去。。。上坡超级陡，下坡又不敢，好多碎石子，弯道非常极速。基本上都是要推车的，害。原来这里还举办过啥比赛，现在还有好多爱好者来溜车，一个装备齐全的、还穿锁鞋👟大妈问我怎么走，还以为是新手，结果跟不上，cj。不过有人在拍照（我），算是绣了一波</li>
<li>下山后，根本上不了速度了，也不想原路返回，换个道回去了。结果来回路上都有墓地🪦。。。</li>
<li>晚上补总结、剪视频。突然想吃馄饨</li>
</ul>
<h1 id="20201218-️">20201218 ☁️</h1>
<ul>
<li>解决摄像头畸变还挺复杂的，晚上聚餐，没心思看了去。。。</li>
<li>vivado 40G，安装还卡死，难搞</li>
</ul>
<h1 id="20201217-晴">20201217 晴</h1>
<ul>
<li>Linux接入双网卡网线，还需要配置路由啊。。。想想也是</li>
<li>终于在pynq-z2上<strong>跑通了</strong>大佬🧍‍♂️的yolov2 <a href="https://github.com/dhm2013724/yolov2_xilinx_fpga">yolov2_xilinx_fpga</a>，fps感人，0.69！！！代码相当复杂，为啥有bit文件了，还要有这么多模型相关代码？有的嚼了</li>
</ul>
<h1 id="20201216-晴">20201216 晴</h1>
<ul>
<li>无脑甲方，快验收了加需求，一点都不考虑风险期。效果不好不很正常，心急吃不了热豆腐</li>
<li>KZ项目收集数据了一天。早上6点的闹钟被我随手关了，差点迟到。中午、晚上还都要去，真冷</li>
<li>KZ项目收集完了，真的冷，一碗肥肠面，爽歪歪</li>
</ul>
<h1 id="20201215-晴">20201215 晴</h1>
<ul>
<li>Gridea有mac、Linux、windows版本，但是看paper、写东西啥的，主要还是在iPad上。于是提了一个issue：Gridea for iPad。店家回复用web版本。。。还果断回复不能支持apple pencil。突然发现，我竟然像无脑甲方</li>
<li><strong>饿了么</strong>连续几天都是1.5块红包🧧，没爱了</li>
<li>今天南京傍晚🌆的天空绝了，像是海啸一样，试飞无人机的时候拍了一段，简单剪辑了一下，发了B站（第一次投稿）。背景音乐是有版权的，用了<strong>DRmare Audio Converter</strong>这个软件转了一下，会不会有啥问题？投稿成功 https://www.bilibili.com/video/BV1Q54y147LC</li>
</ul>
<h1 id="20201214-晴多云">20201214 晴多云</h1>
<ul>
<li>同样的数据处理方式，在fp16后的tensorrt res32模型竟然输出像是随机数？难道是<strong>normalize</strong>的问题？</li>
<li>南京下雪❄️了，本想打着试飞无人机的幌子，拍点不一样的朋友圈，结果要开会。下午又遇到<strong>M级太阳风</strong> ，影响GPS，惨！</li>
</ul>
<h1 id="20201213-晴多云">20201213 晴多云</h1>
<p>一大早起来就7点40了，10点就公祭日的警钟长鸣，计划前往云锦路的南京大屠杀遇难同胞纪念馆。抓紧洗刷完，骑上爱车🚴，吃了两个包子就出发了。一路上，一些地方就有摆花圈，还会有人卖花。到站还有半个多小时才开始，就溜达一会，发个朋友圈🕯️。<br>
到点了，才发现车鸣声碾压警钟声，默哀也不清楚开头和结束。虽然封路，人还是很多的，很是震撼。当然，由于走错了，并不是最合适的地方，可能要下次了。<br>
回到正题，云锦路的南京大屠杀遇难同胞纪念馆，这个名字往往被人简化为“大屠杀纪念馆”，这可真的是意义相反甚远，甚至是完全相反，门同学每次都会纠正别人这个错误👍。<br>
来回骑行了35km左右，已经快不行了，石臼湖的计划有点慌。下午破费，续费了学生优惠的健身卡，顺便游泳🏊会，练了个肩，引体还是4个😓，桌球也是一踏糊涂。但是沙县的🍗炒饭还是棒。over～</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ICCV17] Learning Efficient Convolutional Networks through Network Slimming阅读]]></title>
        <id>https://wo-ki.github.io/post/Learning Efficient Convolutional Networks through Network Slimming/</id>
        <link href="https://wo-ki.github.io/post/Learning Efficient Convolutional Networks through Network Slimming/">
        </link>
        <updated>2020-11-10T08:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>哈</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://wo-ki.github.io/post/hello-gridea/</id>
        <link href="https://wo-ki.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>